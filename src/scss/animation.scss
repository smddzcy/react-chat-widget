@function str-split($string, $separator) {
  $split-arr: ();
  $index : str-index($string, $separator);
  @while $index != null {
      $item: str-slice($string, 1, $index - 1);
      $split-arr: append($split-arr, $item);
      $string: str-slice($string, $index + 1);
      $index : str-index($string, $separator);
  }
  $split-arr: append($split-arr, $string);
  @return $split-arr;
}

@mixin list($map) {
  @each $key, $value in $map {
    #{$key}: $value;
  }
}

@mixin transition($childClasses, $enter, $normal, $exit, $transition, $transitionExit: null) {
  @if not ($transitionExit) {
    $transitionExit: $transition;
  }

  $split-values: str-split($childClasses, ", ");
  @each $childClass in $split-values {
    &-enter #{$childClass}, &-appear #{$childClass} {
      @include list($enter);
    }

    &-enter-active #{$childClass}, &-enter-done #{$childClass}, &-exit #{$childClass} {
      @include list($normal);
    }

    &-exit-active #{$childClass}, &-exit-done #{$childClass} {
      @include list($exit);
    }

    &-enter-active #{$childClass}, &-appear-active #{$childClass} {
      @include list($transition);
    }

    &-exit-active #{$childClass} {
      @include list($transitionExit);
    }
  }
}

@mixin transitionSelf($tName, $enter, $exit, $transition, $transitionExit: null) {
  @if not ($transitionExit) {
    $transitionExit: $transition;
  }

  &.#{$tName}-enter, &.#{$tName}-appear, &.#{$tName}-exit.#{$tName}-exit-active, &.#{$tName}-exit-done {
    @include list($enter);
  }

  &.#{$tName}-exit.#{$tName}-exit-active {
    @include list($transitionExit);
  }

  &.#{$tName}-exit, &.#{$tName}-enter.#{$tName}-enter-active, &.#{$tName}-enter-done {
    @include list($exit);
  }

  &.#{$tName}-enter.#{$tName}-enter-active, &.#{$tName}-appear.#{$tName}-appear-active {
    @include list($transition);
  }
}

@mixin animation ($delay, $duration, $animation) {
  animation-delay: $delay;
  animation-duration: $duration;
  animation-name: $animation;
  animation-timing-function: ease-out;
  animation-fill-mode: forwards;
}

@mixin keyframes ($animation-name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }

  @-moz-keyframes #{$animation-name} {
    @content;
  }

  @keyframes #{$animation-name} {
    @content;
  }
}

@include keyframes(rotation-lr) {
  from  {
    transform: rotate(-45deg);
  }
  to {
    transform: rotate(0);
  }
}

@include keyframes(rotation-rl) {
  from  {
    transform: rotate(45deg);
  }
  to {
    transform: rotate(0);
  }
}

@include keyframes(open-launcher) {
  from {
    transform: rotate(45deg) scale3d(0.5, 0.5, 0.5);
  }
  to {
    transform: rotate(0) scale3d(1, 1, 1);
  }
}

@include keyframes(slide-in) {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@include keyframes(slide-out) {
  from {
    opacity: 1;
    transform: translateY(0);
  }
  to {
    opacity: 0;
    transform: translateY(10px);
  }
}
